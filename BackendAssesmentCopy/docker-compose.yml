version: '3.3'

services:
  postgres:
    build: backend/postgres-dev/
    container_name: postgres
    ports:
    - "5430:5430"
    restart: always
    volumes:
    - ./backend/db_data/:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: $POSTGRES_USERNAME
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
   
  adminer:
    image: adminer
    container_name: adminertwo
    restart: always
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
  assesment:
    container_name: projecttwo
    build: backend/assesment
    command: sh ./docker-entrypoint.sh
    restart: always
    ports:
      - "5020:5020"
    depends_on:
      - postgres
      - kafka
    #volumes:
    #  - ./backend/devkeys:/tmp/secrets
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: imroz
      POSTGRES_HOST: postgres
      POSTGRES_DATABASE: projecttdb
      MONGO_ATLAS_CONNECTION_STRING: None
  assesment_producer:
    container_name: projecttwo_producer
    build: backend/assesment_producer
    command: sh ./docker-entrypoint.sh
    restart: always
    ports:
      - "5030:5030"
    depends_on:
      - postgres
      - kafka
    #volumes:
    #  - ./backend/devkeys:/tmp/secrets
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: imroz
      POSTGRES_HOST: postgres
      POSTGRES_DATABASE: projecttwodb
      MONGO_ATLAS_CONNECTION_STRING: None
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeepertwo
    ports:
     - "2181:2181"
    environment:
     - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafkatwo
    ports:
     - "9092:9092"
     - "9093:9093" 
    depends_on:
     - zookeeper
    environment:
     KAFKA_BROKER_ID: 1
     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
     ALLOW_PLAINTEXT_LISTENER: 1
     KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
     KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
     KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
