version: '2'

services:
  postgres:
    build: backend/postgres-dev/
    container_name: postgres
    ports:
    - 5432:5432
    restart: always
    volumes:
    - ./backend/db_data/:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: $POSTGRES_USERNAME
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
   
  adminer:
    image: adminer
    container_name: adminertwo
    restart: always
    depends_on:
      - postgres
    ports:
      - 8080:8080
    environment:
      ADMINER_DEFAULT_SERVER: postgres
  assesment:
    container_name: projecttwo
    build: backend/assesment
    command: sh ./docker-entrypoint.sh
    restart: always
    ports:
      - 5050:5050
    depends_on:
      - postgres
      - kafka
    #volumes:
    #  - ./backend/devkeys:/tmp/secrets
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: imroz
      POSTGRES_HOST: postgres
      POSTGRES_DATABASE: projecttdb
      MONGO_ATLAS_CONNECTION_STRING: None
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeepertwo
    ports:
     - '2181:2181'
    environment:
     - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafkatwo
    ports:
     - '9092:9092'
     - '9093:9093'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
